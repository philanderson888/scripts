Last login: Wed May 15 21:45:38 on ttys000
cd ~/github/scripts/aws/awsWindows                                                                                      
➜  ~ cd ~/github/scripts/aws/awsWindows
➜  awsWindows git:(master) ./scriptMasterWindows.sh          
screen cleared



shell running on mac
/bin/zsh
zsh 5.9 (x86_64-apple-darwin23.0)



==============================================================
==============================================================
==============================================================
====                      azure                           ====
====                build windows server                  ====
====                 build ubuntu server                  ====
====               run web servers on both                ====
====        script starts at unix time 1715806257
====        script starts at  Wed May 15 21:50:57 2024
==============================================================
==============================================================
==============================================================


==============================================================
====            initialise script functions               ====
==============================================================


==============================================================
====               initialise first waypoint              ====
==============================================================
waypoints array initialised
[
  {
    "waypoint_index": "0",
    "waypoint_name": "script start",
    "waypoint_start": "0",
    "waypoint_end": "0",
    "waypoint_duration": "0"
  }
]



loop over regular array
[
  {
    "name": "John",
    "email": "john@company.com"
  },
  {
    "name": "Brad",
    "email": "brad@company.com"
  }
]
[
  {
    "name": "John",
    "email": "john@company.com"
  },
  {
    "name": "Brad",
    "email": "brad@company.com"
  },
  {
    "name": "Phil Anderson",
    "email": "phil@company.com"
  }
]

array index 0
John
john@company.com

array index 1
Brad
brad@company.com

array index 2
Phil Anderson
phil@company.com
loop over waypoints array

array index 0


i is the full object with keys and values 3
{
  "waypoint_index": "0",
  "waypoint_name": "script start",
  "waypoint_start": "0",
  "waypoint_end": "0",
  "waypoint_duration": "0"
}


bbb
"0"
"script start"
"0"
"0"
"0"


"0"
"script start"
"0"
"0"
"0"


keys unsorted
[
  "waypoint_index",
  "waypoint_name",
  "waypoint_start",
  "waypoint_end",
  "waypoint_duration"
]


keys unsorted 2
waypoint_index
waypoint_name
waypoint_start
waypoint_end
waypoint_duration


get all keys
waypoint_duration
waypoint_end
waypoint_index
waypoint_name
waypoint_start


index 0
waypoint name 3 is script start
waypoint duration is 0

1
jq: parse error: Unfinished JSON term at EOF at line 2, column 0

2
jq: parse error: Unfinished JSON term at EOF at line 2, column 0

3
"waypoint_index"
jq: parse error: Expected string key before ':' at line 1, column 17

4
"0"
jq: parse error: Expected value before ',' at line 1, column 4

5
"waypoint_name"
jq: parse error: Expected string key before ':' at line 1, column 16

6
jq: parse error: Unfinished string at EOF at line 2, column 0

7
jq: parse error: Invalid numeric literal at line 1, column 6

8
"waypoint_start"
jq: parse error: Expected string key before ':' at line 1, column 17

9
"0"
jq: parse error: Expected value before ',' at line 1, column 4

10
"waypoint_end"
jq: parse error: Expected string key before ':' at line 1, column 15

11
"0"
jq: parse error: Expected value before ',' at line 1, column 4

12
"waypoint_duration"
jq: parse error: Expected string key before ':' at line 1, column 20

13
"0"

14
jq: parse error: Unmatched '}' at line 1, column 1

15
jq: parse error: Unmatched ']' at line 1, column 1
user azureuser
pass ...



==============================================================
==============================================================
==== refresh libraries for mac scripting host
====                script elapsed time 0:23
==============================================================
==============================================================






==============================================================
==============================================================
==== script 01
====                script elapsed time 0:23
==============================================================
==============================================================



================================================================
====    only doing installs every 30 runs of this program ====
================================================================
there have been 43 runs of this script
store new value for next time
cat .script_data/run_counter
==============================================================
====             waypoint 2 installing aws and powershell took 1 s
====                script elapsed time 0:24
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
=======================================================================
====                          already logged in to azure portal        =============
=======================================================================



==============================================================
====             waypoint 0 log in to azure took 0 s
====                script elapsed time 0:24
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
=============================================================
====                  azure status                       ====
=============================================================
azure logged in account is ...
philanderson888@hotmail.com



=============================================================
====                 azure account list                  ====
=============================================================
Name           CloudName    TenantId
-------------  -----------  ------------------------------------
Pay-As-You-Go  AzureCloud   84db59c8-e4f2-4a8b-9c4a-2f6be457ceba



==============================================================
====             waypoint 0 query azure took 1 s
====                script elapsed time 0:25
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
==============================================================
====        rebuilding from scratch every time            ====
==============================================================
tearing down and building up from scratch every time
... remove any resource groups if they contain the name Resource Group
... parse the number of the last known resource group
... add one
... create a fresh resource group with the new number incremented by one
... create fresh servers from scratch each time
==============================================================
==============================================================
====            list resource groups 004-070              ====
==============================================================
NetworkWatcherRG
ResourceGroup02
==============================================================
====                get next resource group               ====
==============================================================
putting into an array

for each resource group in list of resource groups

NetworkWatcherRG
ResourceGroup02
NetworkWatcherRG
ResourceGroup02
resource group ResourceGroup02 exists with index 02
new resource group name will be ResourceGroup03
resource group new name is ResourceGroup03
=====================================================================
====            deleting existing resource groups                ====
=====================================================================
NetworkWatcherRG
ResourceGroup02
... deleting resource group ... ResourceGroup02
==============================================================
====             waypoint 0 clean environment took 4 s
====                script elapsed time 0:29
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 4
==============================================================
====                            create resource group         =============
==============================================================
creating resource group ResourceGroup03 in uk south region
{
  "id": "/subscriptions/29a6dc31-f2c3-4caa-a935-2a7158618df5/resourceGroups/ResourceGroup03",
  "location": "uksouth",
  "managedBy": null,
  "name": "ResourceGroup03",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}



resource group ResourceGroup03 was just created, so servers have to be created also



==============================================================
====             waypoint 0 create resource group took 0 s
====                script elapsed time 0:29
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup03 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 4
waypoint index 5 name create resource group duration 0
=====================================================================
====             list resource groups 006-002                    ====
=====================================================================
Resource          Name
----------------  ----------------------
NetworkWatcherRG  NetworkWatcher_uksouth
=====================================================================
====                   get resource group                        ====
=====================================================================
resource group names are ...
NetworkWatcherRG
ResourceGroup03
resource group ResourceGroup03 will be used to build servers in



==============================================================
====             waypoint 0 list resource groups took 2 s
====                script elapsed time 0:31
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup03 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 4
waypoint index 5 name create resource group duration 0
waypoint index 6 name list resource groups duration 2
=====================================================================
====     vm templates >> output-azure-vm-image-templates.txt     ====
=====================================================================
find all Gen2 SKUs published by Microsoft Windows Desktop - output to output-azure-vm-image-templates.txt
find all Gen2 SKUs published by Microsoft Windows Desktop - output to output-azure-vm-image-templates.txt
find all Gen2 SKUs published by Canonical - output to output-azure-vm-image-templates.txt
find all images - output to output-azure-vm-image-templates.txt
azure image templates to use are
- valid image URN
- custom image name
- custom image id
- VHD blob URI
- image from
- CentOS85Gen2
- Debian11
- FlatcarLinuxFreeGen2
- OpenSuseLeap154Gen2
- RHELRaw8LVMGen2
- SuseSles15SP3
- Ubuntu2204
- Win2022Datacenter
- Win2022AzureEditionCore
==============================================================
====             waypoint 0 query vm templates took 0 s
====                script elapsed time 0:31
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup03 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 4
waypoint index 5 name create resource group duration 0
waypoint index 6 name list resource groups duration 2
waypoint index 7 name query vm templates duration 0



==============================================================
==============================================================
====                   choose vm image
====                script elapsed time 0:31
==============================================================
==============================================================






==============================================================
==============================================================
====                      script 09
====                script elapsed time 0:31
==============================================================
==============================================================



==============================================================
====             waypoint 0 set vm type to be ubuntu took 0 s
====                script elapsed time 0:31
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup03 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 4
waypoint index 5 name create resource group duration 0
waypoint index 6 name list resource groups duration 2
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
➜  awsWindows git:(master) ✗ ./scriptMasterWindows.sh
screen cleared



shell running on mac
/bin/zsh
zsh 5.9 (x86_64-apple-darwin23.0)



==============================================================
==============================================================
==============================================================
====                      azure                           ====
====                build windows server                  ====
====                 build ubuntu server                  ====
====               run web servers on both                ====
====        script starts at unix time 1715806443
====        script starts at  Wed May 15 21:54:03 2024
==============================================================
==============================================================
==============================================================


==============================================================
====            initialise script functions               ====
==============================================================


==============================================================
====               initialise first waypoint              ====
==============================================================
waypoints array initialised
[
  {
    "waypoint_index": "0",
    "waypoint_name": "script start",
    "waypoint_start": "0",
    "waypoint_end": "0",
    "waypoint_duration": "0"
  }
]



loop over regular array
[
  {
    "name": "John",
    "email": "john@company.com"
  },
  {
    "name": "Brad",
    "email": "brad@company.com"
  }
]
[
  {
    "name": "John",
    "email": "john@company.com"
  },
  {
    "name": "Brad",
    "email": "brad@company.com"
  },
  {
    "name": "Phil Anderson",
    "email": "phil@company.com"
  }
]

array index 0
John
john@company.com

array index 1
Brad
brad@company.com

array index 2
Phil Anderson
phil@company.com
loop over waypoints array

array index 0


i is the full object with keys and values 3
{
  "waypoint_index": "0",
  "waypoint_name": "script start",
  "waypoint_start": "0",
  "waypoint_end": "0",
  "waypoint_duration": "0"
}


bbb
"0"
"script start"
"0"
"0"
"0"


"0"
"script start"
"0"
"0"
"0"


keys unsorted
[
  "waypoint_index",
  "waypoint_name",
  "waypoint_start",
  "waypoint_end",
  "waypoint_duration"
]


keys unsorted 2
waypoint_index
waypoint_name
waypoint_start
waypoint_end
waypoint_duration


get all keys
waypoint_duration
waypoint_end
waypoint_index
waypoint_name
waypoint_start


index 0
waypoint name 3 is script start
waypoint duration is 0

1
jq: parse error: Unfinished JSON term at EOF at line 2, column 0

2
jq: parse error: Unfinished JSON term at EOF at line 2, column 0

3
"waypoint_index"
jq: parse error: Expected string key before ':' at line 1, column 17

4
"0"
jq: parse error: Expected value before ',' at line 1, column 4

5
"waypoint_name"
jq: parse error: Expected string key before ':' at line 1, column 16

6
jq: parse error: Unfinished string at EOF at line 2, column 0

7
jq: parse error: Invalid numeric literal at line 1, column 6

8
"waypoint_start"
jq: parse error: Expected string key before ':' at line 1, column 17

9
"0"
jq: parse error: Expected value before ',' at line 1, column 4

10
"waypoint_end"
jq: parse error: Expected string key before ':' at line 1, column 15

11
"0"
jq: parse error: Expected value before ',' at line 1, column 4

12
"waypoint_duration"
jq: parse error: Expected string key before ':' at line 1, column 20

13
"0"

14
jq: parse error: Unmatched '}' at line 1, column 1

15
jq: parse error: Unmatched ']' at line 1, column 1
user azureuser
pass ...



==============================================================
==============================================================
==== refresh libraries for mac scripting host
====                script elapsed time 0:23
==============================================================
==============================================================






==============================================================
==============================================================
==== script 01
====                script elapsed time 0:23
==============================================================
==============================================================



================================================================
====    only doing installs every 30 runs of this program ====
================================================================
there have been 44 runs of this script
store new value for next time
cat .script_data/run_counter
==============================================================
====             waypoint 2 installing aws and powershell took 1 s
====                script elapsed time 0:23
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
=======================================================================
====                          already logged in to azure portal        =============
=======================================================================



==============================================================
====             waypoint 0 log in to azure took 0 s
====                script elapsed time 0:23
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
=============================================================
====                  azure status                       ====
=============================================================
azure logged in account is ...
philanderson888@hotmail.com



=============================================================
====                 azure account list                  ====
=============================================================
Name           CloudName    TenantId
-------------  -----------  ------------------------------------
Pay-As-You-Go  AzureCloud   84db59c8-e4f2-4a8b-9c4a-2f6be457ceba



==============================================================
====             waypoint 0 query azure took 1 s
====                script elapsed time 0:24
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21
powershell version PowerShell 7.4.1 installed
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
==============================================================
====        rebuilding from scratch every time            ====
==============================================================
tearing down and building up from scratch every time
... remove any resource groups if they contain the name Resource Group
... parse the number of the last known resource group
... add one
... create a fresh resource group with the new number incremented by one
... create fresh servers from scratch each time
==============================================================
==============================================================
====            list resource groups 004-070              ====
==============================================================
NetworkWatcherRG
ResourceGroup03
==============================================================
====                get next resource group               ====
==============================================================
putting into an array

for each resource group in list of resource groups

NetworkWatcherRG
ResourceGroup03
NetworkWatcherRG
ResourceGroup03
resource group ResourceGroup03 exists with index 03
new resource group name will be ResourceGroup04
resource group new name is ResourceGroup04
=====================================================================
====            deleting existing resource groups                ====
=====================================================================
NetworkWatcherRG
ResourceGroup03
... deleting resource group ... ResourceGroup03
==============================================================
====             waypoint 0 clean environment took 2 s
====                script elapsed time 0:26
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
==============================================================
====                            create resource group         =============
==============================================================
creating resource group ResourceGroup04 in uk south region
{
  "id": "/subscriptions/29a6dc31-f2c3-4caa-a935-2a7158618df5/resourceGroups/ResourceGroup04",
  "location": "uksouth",
  "managedBy": null,
  "name": "ResourceGroup04",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}



resource group ResourceGroup04 was just created, so servers have to be created also



==============================================================
====             waypoint 0 create resource group took 1 s
====                script elapsed time 0:27
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
=====================================================================
====             list resource groups 006-002                    ====
=====================================================================
Resource          Name
----------------  ----------------------
NetworkWatcherRG  NetworkWatcher_uksouth
=====================================================================
====                   get resource group                        ====
=====================================================================
resource group names are ...
NetworkWatcherRG
ResourceGroup03
ResourceGroup04
resource group ResourceGroup04 will be used to build servers in



==============================================================
====             waypoint 0 list resource groups took 1 s
====                script elapsed time 0:28
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
=====================================================================
====     vm templates >> output-azure-vm-image-templates.txt     ====
=====================================================================
find all Gen2 SKUs published by Microsoft Windows Desktop - output to output-azure-vm-image-templates.txt
find all Gen2 SKUs published by Microsoft Windows Desktop - output to output-azure-vm-image-templates.txt
find all Gen2 SKUs published by Canonical - output to output-azure-vm-image-templates.txt
find all images - output to output-azure-vm-image-templates.txt
azure image templates to use are
- valid image URN
- custom image name
- custom image id
- VHD blob URI
- image from
- CentOS85Gen2
- Debian11
- FlatcarLinuxFreeGen2
- OpenSuseLeap154Gen2
- RHELRaw8LVMGen2
- SuseSles15SP3
- Ubuntu2204
- Win2022Datacenter
- Win2022AzureEditionCore
==============================================================
====             waypoint 0 query vm templates took 0 s
====                script elapsed time 0:28
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0



==============================================================
==============================================================
====                   choose vm image
====                script elapsed time 0:28
==============================================================
==============================================================






==============================================================
==============================================================
====                      script 09
====                script elapsed time 0:28
==============================================================
==============================================================



==============================================================
====             waypoint 0 set vm type to be ubuntu took 0 s
====                script elapsed time 0:28
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0



==============================================================
==============================================================
====                      create vms
====                script elapsed time 0:28
==============================================================
==============================================================






==============================================================
==============================================================
====                      script 10
====                script elapsed time 0:28
==============================================================
==============================================================



=======================================================================
====             create vm ubuntuVm01 using image Ubuntu2204
====                script elapsed time 0:28
=======================================================================
{
  "fqdns": "",
  "id": "/subscriptions/29a6dc31-f2c3-4caa-a935-2a7158618df5/resourceGroups/ResourceGroup04/providers/Microsoft.Compute/virtualMachines/ubuntuVm01",
  "location": "uksouth",
  "macAddress": "60-45-BD-14-2E-6C",
  "powerState": "VM running",
  "privateIpAddress": "10.0.0.4",
  "publicIpAddress": "51.145.28.139",
  "resourceGroup": "ResourceGroup04",
  "zones": ""
}



==============================================================
====             waypoint 0 vm created took 66 s
====                script elapsed time 1:34
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66



==============================================================
==============================================================
====                      query vms
====                script elapsed time 1:34
==============================================================
==============================================================






==============================================================
==============================================================
====                      script 11
====                script elapsed time 1:34
==============================================================
==============================================================






==============================================================
==============================================================
====                     query vm ubuntuVm01               
====                script elapsed time 1:34
==============================================================
==============================================================



resource group name ResourceGroup04
vm id is /subscriptions/29a6dc31-f2c3-4caa-a935-2a7158618df5/resourceGroups/VMResources/providers/Microsoft.Compute/virtualMachines/ubuntuVm01
machine id cfc4f8d3-6c8d-4961-8f05-87addf1e0439
user name azureuser
ubuntu computer name ubuntuVm01
ubuntu vm id hash ... cfc4f8d3-6c8d-4961-8f05-87addf1e0439
ubuntu vm size ... Standard_DS1_v2
ubuntu vm network id is /subscriptions/29a6dc31-f2c3-4caa-a935-2a7158618df5/resourceGroups/ResourceGroup04/providers/Microsoft.Network/networkInterfaces/ubuntuVm01VMNic
network card name ubuntuVm01VMNic
ubuntu vm public ip is 51.145.28.139
ubuntu vm private ip is 10.0.0.4
network card mac address 60-45-BD-14-2E-6C
resource group name ResourceGroup04
resource group location uksouth
resource group id d976fdc4-1de1-46d6-9a1d-1aae26d706f8
==============================================================
====             waypoint 0 query vm using azure cli took 12 s
====                script elapsed time 1:46
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12



==============================================================
==============================================================
====               query network secuirity groups
====                script elapsed time 1:46
==============================================================
==============================================================






==============================================================
==============================================================
====                       script 12
====                script elapsed time 1:46
==============================================================
==============================================================



=====================================================================
====               query network security group                  ====
====        output sent to ./output-network-security-group.txt   ====
=====================================================================
==============================================================
====             waypoint 0 query network security group performed took 0 s
====                script elapsed time 1:46
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0



==============================================================
==============================================================
====                    who am i USER
====                script elapsed time 1:46
==============================================================
==============================================================






==============================================================
==============================================================
====                       script 13
====                script elapsed time 1:46
==============================================================
==============================================================



Warning: Permanently added '51.145.28.139' (ED25519) to the list of known hosts.
username azureuser



==============================================================
==============================================================
====                    get remote shell
====                script elapsed time 1:47
==============================================================
==============================================================






==============================================================
==============================================================
====                       script 13    
====                script elapsed time 1:47
==============================================================
==============================================================






==============================================================
==============================================================
====                     query linux
====                script elapsed time 1:48
==============================================================
==============================================================






==============================================================
==============================================================
====                       script 13
====                script elapsed time 1:48
==============================================================
==============================================================



=======================================================================
====                          shell 01310                          ====
=======================================================================
shell in use on remote machine is /bin/bash
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)



touch output.txt 01310



chmod 777 output.txt



=======================================================================
====                     linux version 01320                       ====
=======================================================================
running a case statement on /etc/os-release against the option 'ID'
This is Ubuntu Linux
==================================================================
====              update ubuntu of type debian 01330
==================================================================
==============================================================
====              apt-get install nginx 01340
==============================================================
==============================================================
====                    nginx version 01350               ====
==============================================================
keep sleep 1
==============================================================
====               update various services 013-077        ====
==============================================================
this command gives nginx version
nginx version: nginx/1.18.0 (Ubuntu)



which shell am i using
/bin/bash



shell version
GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.



touch output.txt 04-015



chmod 777 output.txt



ls -lah output.txt
-rwxrwxrwx 1 azureuser azureuser 12K May 15 20:56 output.txt


echo output.txt into output.txt



tail output.txt
Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
this is the end of the output file



=======================================================================
====          which flavour of linux is this machine 04010         ====
=======================================================================
running a case statement on /etc/os-release against the option 'ID'
still to add in the fedora case
This is Ubuntu Linux



echo lsb_release -si
Ubuntu



examining case /usr/bin/lsb_release -si to get os name eg ubuntu and id_like eg debian
still to add in the fedora case
ubuntu



=======================================================================
====                operating system type 04050                    ====
=======================================================================



id like
debian



operating system type
ubuntu_distribution
ubuntu operating system



cat /etc/os-release
PRETTY_NAME="Ubuntu 22.04.4 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.4 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy



This is Debian Linux => of which Ubuntu is a flavour



linux os name in /etc/os-release
NAME="Ubuntu"



linux os name and version with quotes from awk - F = /^NAME/{print $2} /etc/os-release
Ubuntu"



linux os name and version without quotes
Ubuntu



linux os name and version 2 with PRETTY_NAME from /etc/os-release
PRETTY_NAME="Ubuntu 22.04.4 LTS"



echo linux os name and version 2 with quotes
. . . from - awk - F =/PRETTY_NAME/ { print $ 2 } /etc/os-release
"Ubuntu 22.04.4 LTS"



linux os name and version without quotes - 1 - lsb_release - d | awk - F \t  { print $ 2}
Ubuntu 22.04.4 LTS
linux os name and version without quotes - 2 - lsb_release -sd
Ubuntu 22.04.4 LTS



linux version number and friendly name with VERSION from /etc/os-release
VERSION="22.04.4 LTS (Jammy Jellyfish)"



linux version major minor revision with VERSION_ID from /etc/os-release
VERSION_ID="22.04"



linux version major minor lsb_release -sr
22.04



linux VERSION_CODENAME in /etc/os-release
VERSION_CODENAME=jammy



linux ID_LIKE in /etc/os-release
ID_LIKE=debian



lsb_release - d | awk {print $ 3}
22.04.4



lsb_release -a
Distributor ID:	Ubuntu
Description:	Ubuntu 22.04.4 LTS
Release:	22.04
Codename:	jammy
No LSB modules are available.



cat /etc/*release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=22.04
DISTRIB_CODENAME=jammy
DISTRIB_DESCRIPTION="Ubuntu 22.04.4 LTS"
PRETTY_NAME="Ubuntu 22.04.4 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.4 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy




ls /etc/*release*
-rw-r--r-- 1 root root 104 Feb 14 14:47 lsb-release
lrwxrwxrwx 1 root root  21 Feb 14 14:47 os-release -> ../usr/lib/os-release
-rw-r--r-- 1 root root 104 Feb 14 14:47 /etc/lsb-release
lrwxrwxrwx 1 root root  21 Feb 14 14:47 /etc/os-release -> ../usr/lib/os-release



if its a lsb release then run apt-get
if [ -f /etc/lsb-release ]; then apt-get update fi 
its ubuntu !?



uname = unix name
Linux



uname in lower case
linux



echo uname -a .... full complex linux kernel version ...
-a
Linux ubuntuVm01 6.5.0-1021-azure #22~22.04.1-Ubuntu SMP Tue Apr 30 16:08:18 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux


uname -srm .... linux kernel short version ...
this is useful - export this one
Linux 6.5.0-1021-azure x86_64



distribution is Ubuntu



bash: line 312: DISTRO: command not found
distribution in lower case is
ubuntu operating system



linux os details
/etc/os-release ... /usr/lib/os-release
PRETTY_NAME="Ubuntu 22.04.4 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.4 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
UBUNTU_CODENAME=jammy
linux pretty name is PRETTY_NAME="Ubuntu 22.04.4 LTS"



virtualization details of the amazon vm host and os
hostnamectl
 Static hostname: ubuntuVm01
       Icon name: computer-vm
         Chassis: vm
      Machine ID: 33b50cf8fa3a49989fecfb2c639272dd
         Boot ID: b2c88753b4074a7b9e678d3cd4e968da
  Virtualization: microsoft
Operating System: Ubuntu 22.04.4 LTS
          Kernel: Linux 6.5.0-1021-azure
    Architecture: x86-64
 Hardware Vendor: Microsoft Corporation
  Hardware Model: Virtual Machine
=======================================================================
==== if id_like=debian then sudo apt-get update/upgrade 04300      ====
=======================================================================



=======================================================================
====                   apt-get update 04310                        ====
=======================================================================
apt-get update silent
=======================================================================
====                  apt-get upgrade 04320                        ====
=======================================================================
apt-get upgrade silent



nginx -v
nginx version: nginx/1.18.0 (Ubuntu)



=======================================================================
====           update various services 04330                       ====
=======================================================================
gett nginx version using system control restart journal d service wow
=======================================================================
====          apt-get install gcc 04340                            ====
=======================================================================
Job for user@1000.service failed because the control process exited with error code.
See "systemctl status user@1000.service" and "journalctl -xeu user@1000.service" for details.
bash: line 458: output.txt: Permission denied
=======================================================================
====             apt-get install fish 04350                        ====
=======================================================================
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Get:5 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease [17.6 kB]
Get:6 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy/main amd64 Packages [580 B]
Get:7 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy/main Translation-en [288 B]
Fetched 18.4 kB in 1s (16.1 kB/s)
Reading package lists...
Repository: 'deb https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu/ jammy main'
Description:
This archive contains releases made from the Fish 3.x series.

To install fish, run the following commands:

sudo apt-add-repository ppa:fish-shell/release-3
sudo apt update
sudo apt install fish
More info: https://launchpad.net/~fish-shell/+archive/ubuntu/release-3
Adding repository.
Adding deb entry to /etc/apt/sources.list.d/fish-shell-ubuntu-release-3-jammy.list
Adding disabled deb-src entry to /etc/apt/sources.list.d/fish-shell-ubuntu-release-3-jammy.list
Adding key to /etc/apt/trusted.gpg.d/fish-shell-ubuntu-release-3.gpg with fingerprint 59FDA1CE1B84B3FAD89366C027557F056DC33CA5
bash: line 464: output.txt: Permission denied
bash: line 465: output.txt: Permission denied



what is this
apt-get -v
apt 2.4.12 (amd64)
Supported modules:
*Ver: Standard .deb
 Pkg:  Debian APT solver interface (Priority -1000)
 Pkg:  Debian APT planner interface (Priority -1000)
*Pkg:  Debian dpkg interface (Priority 30)
 S.L: 'deb' Debian binary tree
 S.L: 'deb-src' Debian source tree
 Idx: EDSP scenario file
 Idx: EIPP scenario file
 Idx: Debian Source Index
 Idx: Debian Package Index
 Idx: Debian Translation Index
 Idx: Debian dpkg status file
 Idx: Debian deb file
 Idx: Debian dsc file
 Idx: Debian control file



apt-get update
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Reading package lists...



python version
Python 3.10.12



python platform ... linux os on which python is built ....
Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
=====================================================================
====            query linux ... complete 04500                   ====
=====================================================================

==============================================================
====             waypoint 0 query linux took 80 s
====                script elapsed time 3:06
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80



==============================================================
==============================================================
====                   dnf install
====                script elapsed time 3:06
==============================================================
==============================================================






==============================================================
==============================================================
====                   dnf install
====                script elapsed time 3:06
==============================================================
==============================================================



=======================================================================
====                          shell                                ====
=======================================================================
shell in use on remote machine is /bin/bash
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
=======================================================================
====                        linux version                          ====
=======================================================================
running a case statement on /etc/os-release against the option 'ID'
This is Ubuntu Linux
==================================================================
====              update ubuntu of type debian 2
==================================================================
==============================================================
====              apt-get install nginx  2                ====
====                 * * * silent * * *                   ====
==============================================================
==============================================================
====               update various services                ====
==============================================================
==============================================================
====                   install dnf                        ====
==============================================================
do not install dnf on ubuntu
==============================================================
====             waypoint 0 dnf install took 3 s
====                script elapsed time 3:09
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3



==============================================================
==============================================================
====                   update os
====                script elapsed time 3:09
==============================================================
==============================================================



shell /bin/bash
==============================================================
====                    update vm                         ====
==============================================================
==============================================================
====          which flavour of linux is this machine      ====
==============================================================
running a case statement on /etc/os-release against the option 'ID'
This is Ubuntu Linux






=====================================================================
====              update ubuntu which is of type debian
=====================================================================
=====================================================================
====                    apt-get update                           ====
====                  * * * silent * * *                         ====
=====================================================================
=====================================================================
====                    apt-get upgrade                          ====
=====================================================================
=================================================================
====                       python                            ====
=================================================================
python version
Python 3.10.12



python platform ... linux os on which python is built ....
Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
===============================================================
====          update and upgrade linux complete            ====
===============================================================
==============================================================
====             waypoint 0 os updated took 7 s
====                script elapsed time 3:16
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
==============================================================
====             waypoint 0 deciding which services to install took 0 s
====                script elapsed time 3:16
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
the following services will be installed ...
    apache
    nginx
    services restarted
    node
    express
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0



==============================================================
==============================================================
====                       zsh                            ====
====                script elapsed time 3:16
==============================================================
==============================================================



script-18-always-run-zsh.sh                                                   100%   31     1.4KB/s   00:00    
=======================================================================
====            apt-get install zsh 18020                          ====
=======================================================================
cd /home/azureuser
whoami
azureuser
pwd
/home/azureuser



Reading package lists...
Building dependency tree...
Reading state information...
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
apt-get install dialog
Reading package lists...
Building dependency tree...
Reading state information...
dialog is already the newest version (1.3-20211214-1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
apt-get install apt-utils
Reading package lists...
Building dependency tree...
Reading state information...
apt-utils is already the newest version (2.4.12).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
apt-get install zsh
usage: sudo -h | -K | -k | -V
usage: sudo -v [-ABknS] [-g group] [-h host] [-p prompt] [-u user]
usage: sudo -l [-ABknS] [-g group] [-h host] [-p prompt] [-U user] [-u user]
            [command]
usage: sudo [-ABbEHknPS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user]
  touch ./.oh-my-zsh



ls
output.txt
script-18-always-run-zsh.sh



force zsh to always run every time by amending .bashrc file
cat script-18-always-run-zsh.sh
if test -t 1; then
exec zsh
fi



          [VAR=value] [-i|-s] [<command>]
usage: sudo -e [-ABknS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user] file ...
usage: sudo -h | -K | -k | -V
usage: sudo -v [-ABknS] [-g group] [-h host] [-p prompt] [-u user]
usage: sudo -l [-ABknS] [-g group] [-h host] [-p prompt] [-U user] [-u user]
            [command]
usage: sudo [-ABbEHknPS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user]
            [VAR=value] [-i|-s] [<command>]
usage: sudo -e [-ABknS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user] file ...
usage: sudo -h | -K | -k | -V
usage: sudo -v [-ABknS] [-g group] [-h host] [-p prompt] [-u user]
usage: sudo -l [-ABknS] [-g group] [-h host] [-p prompt] [-U user] [-u user]
            [command]
usage: sudo [-ABbEHknPS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user]
            [VAR=value] [-i|-s] [<command>]
usage: sudo -e [-ABknS] [-r role] [-t type] [-C num] [-D directory] [-g group]
            [-h host] [-p prompt] [-R directory] [-T timeout] [-u user] file ...



cat .bashrc
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
cat script-18-always-run-zsh.sh
if test -t 1; then
exec zsh
fi



echo shell
/bin/bash



shell version
GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
which zsh
/usr/bin/zsh



cat .zshrc



set zsh as default
cat: .zshrc: No such file or directory



zsh - setting zsh as the shell - but does it work



shell
/bin/bash



shell version
GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.



which zsh
/usr/bin/zsh



whereis zsh
zsh: /usr/bin/zsh /usr/lib/x86_64-linux-gnu/zsh /etc/zsh /usr/share/zsh /usr/share/man/man1/zsh.1.gz



zsh version
zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
=====================================================================
====                set zsh as default shell                     ====
=====================================================================



if on fedora use this command
If you use lchsh you need to type /bin/zsh to make it your default shell.
Log out and log back in again to use your new default shell.
Test that it worked with echo /bin/bash. Expected result: /bin/zsh or similar
Test with /bin/bash --version. Expected result: zsh 5.8 or similar



has the shell changed - let us see
shell
/bin/bash
sudo: lchsh: command not found
==============================================================
====             waypoint 0 zsh took 12 s
====                script elapsed time 3:28
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12



==============================================================
==============================================================
====                    oh my zsh                         ====
====                script elapsed time 3:29
==============================================================
==============================================================



shell
/bin/bash



shell version
GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.



which version of zsh is in use
zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
=====================================================================
====        download and install zsh using curl command          ====
=====================================================================
Cloning Oh My Zsh...
fatal: cannot mkdir /home/azureuser/.oh-my-zsh: File exists
Error: git clone of oh-my-zsh repo failed
zsh



shell
/bin/bash



shell version
GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.



zsh version
zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
=====================================================================
====                         test oh-my-zsh                            ====
=====================================================================
==============================================================
====             waypoint 0 install zsh oh-my-zsh took 2 s
====                script elapsed time 3:30
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2



==============================================================
==============================================================
====          fish friendly interactive shell             ====
====                script elapsed time 3:30
==============================================================
==============================================================



fish version fish, version 3.7.1
==============================================================
====             waypoint 0 fish took 17 s
====                script elapsed time 3:47
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17



==============================================================
==============================================================
====                         git                          ====
====                script elapsed time 3:47
==============================================================
==============================================================






==============================================================
==============================================================
====                      script 21                       ====
====                script elapsed time 3:47
==============================================================
==============================================================



git version 2.34.1
==============================================================
====             waypoint 0 git took 2 s
====                script elapsed time 3:49
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2



==============================================================
==============================================================
====                        apache                        ====
====                script elapsed time 3:49
==============================================================
==============================================================






==============================================================
==============================================================
====                       script 22                      ====
====                script elapsed time 3:49
==============================================================
==============================================================



not sure this is working ... on http ...
certainly not working on https
low priority ... can have a look at this some time ...
bash: line 1: apache2: command not found
==============================================================
====             waypoint 0 apache took 2 s
====                script elapsed time 3:51
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
==============================
====      fix these       ====
==============================
apache version 
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2



==============================================================
==============================================================
====                      nginx                           ====
====                script elapsed time 3:51
==============================================================
==============================================================






==============================================================
==============================================================
====                    script 23                         ====
====                script elapsed time 3:51
==============================================================
==============================================================



=======================================================================
====                 apt-get install nginx 23
finish the job - here are some links to complete the job
https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-20-04
https://ubuntu.com/server/docs/how-to-install-nginx
=======================================================================



nginx version
nginx version: nginx/1.18.0 (Ubuntu)
==============================================================
====             waypoint 0 nginx took 3 s
====                script elapsed time 3:54
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
==============================
====      fix these       ====
==============================
apache version 
nginx version 
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3



==============================================================
==============================================================
====               restart services                       ====
====                script elapsed time 3:54
==============================================================
==============================================================



=======================================================================
====                       restart services                              ====
=======================================================================



==============================================================
==============================================================
====              node npm express                         ====
====                script elapsed time 3:56
==============================================================
==============================================================






==============================================================
==============================================================
====                 script 25                             ====
====                script elapsed time 3:56
==============================================================
==============================================================



zsh
cd /home/azureuser
===================================================================
====        obtaining node binaries via curl command 25020     ====
===================================================================
zsh: unmatched "
2024-05-15 20:58:00 - Installing pre-requisites
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ca-certificates is already the newest version (20230311ubuntu0.22.04.1).
ca-certificates set to manually installed.
curl is already the newest version (7.81.0-1ubuntu1.16).
curl set to manually installed.
gnupg is already the newest version (2.2.27-3ubuntu2.1).
gnupg set to manually installed.
The following NEW packages will be installed:
  apt-transport-https
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 1510 B of archives.
After this operation, 170 kB of additional disk space will be used.
Get:1 http://azure.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.12 [1510 B]
Fetched 1510 B in 5s (300 B/s)
Selecting previously unselected package apt-transport-https.
(Reading database ... 65513 files and directories currently installed.)
Preparing to unpack .../apt-transport-https_2.4.12_all.deb ...
Unpacking apt-transport-https (2.4.12) ...
Setting up apt-transport-https (2.4.12) ...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Get:6 https://deb.nodesource.com/node_20.x nodistro InRelease [12.1 kB]
Get:7 https://deb.nodesource.com/node_20.x nodistro/main amd64 Packages [7318 B]
Fetched 19.5 kB in 1s (19.2 kB/s)
Reading package lists...
2024-05-15 20:58:13 - Repository configured successfully. To install Node.js, run: apt-get install nodejs -y
note - E means 'preserve environment'
note - sudo - E will download the file then execute it with sudo commands
===================================================================
====                  install node 25030
===================================================================
v20.13.1
10.5.2
adding bash commands to zsh
===================================================================
====                  node and npm version                     ====
===================================================================
node version
v20.13.1
npm version
10.5.2
=====================================================================
====                  node run js command                        ====
=====================================================================
this is node js javascript
node version v20.13.1
node processes running
{
  node: '20.13.1',
  acorn: '8.11.3',
  ada: '2.7.8',
  ares: '1.28.1',
  base64: '0.5.2',
  brotli: '1.1.0',
  cjs_module_lexer: '1.2.2',
  cldr: '45.0',
  icu: '75.1',
  llhttp: '8.1.2',
  modules: '115',
  napi: '9',
  nghttp2: '1.61.0',
  nghttp3: '0.7.0',
  ngtcp2: '1.1.0',
  openssl: '3.0.13+quic',
  simdutf: '5.2.4',
  tz: '2024a',
  undici: '6.13.0',
  unicode: '15.1',
  uv: '1.46.0',
  uvwasi: '0.0.20',
  v8: '11.3.244.8-node.20',
  zlib: '1.3.0.1-motley-7d77fb7'
}
node platform linux
node environment variables
{
  SHELL: '/bin/bash',
  PWD: '/home/azureuser',
  LOGNAME: 'azureuser',
  XDG_SESSION_TYPE: 'tty',
  MOTD_SHOWN: 'pam',
  HOME: '/home/azureuser',
  LANG: 'C.UTF-8',
  SSH_CONNECTION: '77.99.118.2 50826 10.0.0.4 22',
  XDG_SESSION_CLASS: 'user',
  USER: 'azureuser',
  SHLVL: '1',
  XDG_SESSION_ID: '31',
  XDG_RUNTIME_DIR: '/run/user/1000',
  SSH_CLIENT: '77.99.118.2 50826 22',
  PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin',
  DBUS_SESSION_BUS_ADDRESS: 'unix:path=/run/user/1000/bus',
  _: '/usr/bin/node',
  OLDPWD: '/home/azureuser'
}
=======================================================================
====                  install node complete                        ====
=======================================================================
=======================================================================
====                 download express project 25100                ====
====         git clone strongloop/express-example-app              ====
=======================================================================
mv express-example-app express
list files
CHANGES.md
LICENSE
README.md
index.js
package.json
server.js
test.js



rename the ports
cat the server file
// Copyright IBM Corp. 2015. All Rights Reserved.
// Node module: express-example-app
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

'use strict';

var app = require('./')();
var port = 'PORT' in process.env ? process.env.PORT : 3008;

console.log('Listening on port:', port);

app.listen(port);
=======================================================================
====               express - npm install 25110                     ====
=======================================================================
npm WARN deprecated har-validator@5.1.5: this library is no longer supported
npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.
npm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.
npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142

added 313 packages, and audited 314 packages in 28s

62 packages are looking for funding
  run `npm fund` for details

13 vulnerabilities (6 moderate, 6 high, 1 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
npm notice 
npm notice New minor version of npm available! 10.5.2 -> 10.7.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.7.0>
npm notice Run `npm install -g npm@10.7.0` to update!
npm noticenpm version using npm list express
 
express-example-app@1.0.4 /home/azureuser/express
└── express@4.19.2




=======================================================================
====                  npm start express 25120                      ====
====                   run in non-ui thread                        ====
=======================================================================
=======================================================================
====                express built but not running 25130            ====
=======================================================================
=======================================================================
====                            vue                                ====
=======================================================================
=======================================================================
====                npm install create-vue 25140                   ====
=======================================================================
mkdir vue25140
cd vue25140
npm install create-vue

added 1 package in 1s
ls
node_modules
package-lock.json
package.json



=======================================================================
====                    git clone vue 25150                        ====
=======================================================================
git clone github kontent-ai sample-app-vue
Cloning into 'sample-app-vue'...



mv sample-app-vue vue25150



ls
LICENSE
README.md
env.d.ts
index.html
netlify.toml
package-lock.json
package.json
public
src
tsconfig.config.json
tsconfig.json
vite.config.ts



npm install
npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: '@achrinza/node-ipc@9.2.6',
npm WARN EBADENGINE   required: {
npm WARN EBADENGINE     node: '8 || 9 || 10 || 11 || 12 || 13 || 14 || 15 || 16 || 17 || 18 || 19'
npm WARN EBADENGINE   },
npm WARN EBADENGINE   current: { node: 'v20.13.1', npm: '10.5.2' }
npm WARN EBADENGINE }
npm WARN deprecated stable@0.1.8: Modern JS already guarantees Array#sort() is a stable sort, so this library is deprecated. See the compatibility table on MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#browser_compatibility
npm WARN deprecated sourcemap-codec@1.4.8: Please use @jridgewell/sourcemap-codec instead

added 1166 packages, and audited 1167 packages in 31s

187 packages are looking for funding
  run `npm fund` for details

15 vulnerabilities (11 moderate, 3 high, 1 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
=======================================================================
====             vue 25150 took 33 seconds
=======================================================================
==============================================================
====             waypoint 0 node took 95 s
====                script elapsed time 5:29
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95



==============================================================
==============================================================
====                   express                           ====
====                script elapsed time 5:29
==============================================================
==============================================================






==============================================================
==============================================================
====                 script 26                          ====
====                script elapsed time 5:29
==============================================================
==============================================================



=======================================================================
====                  git clone express  26a                       ====
=======================================================================
ls
express
output.txt
script-18-always-run-zsh.sh
vue25140
vue25150



move into express folder



ls
CHANGES.md
LICENSE
README.md
index.js
node_modules
package-lock.json
package.json
server.js
test.js



=======================================================================
====                   npm install express 26b                     ====
=======================================================================

up to date, audited 314 packages in 3s

62 packages are looking for funding
  run `npm fund` for details

13 vulnerabilities (6 moderate, 6 high, 1 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues possible (including breaking changes), run:
  npm audit fix --force

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
list files now
CHANGES.md
LICENSE
README.md
index.js
node_modules
package-lock.json
package.json
server.js
test.js
npm version using npm list express
express-example-app@1.0.4 /home/azureuser/express
└── express@4.19.2

running express in second terminal
==============================================================
====             waypoint 0 express 2 took 6 s
====                script elapsed time 5:35
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 /home/azureuser
└── (empty)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95
waypoint index 23 name express 2 duration 6



==============================================================
==============================================================
====                    running servers                  ====
====                script elapsed time 5:35
==============================================================
==============================================================



==============================================================
====                run apache web server                 ====
====                script elapsed time 5:35
==============================================================
==============================================================
====               run nginx web server                   ====
====                script elapsed time 5:35
==============================================================
nginx install works ... nothing to test at present
==============================================================
====             running node web server                  ====
====                script elapsed time 5:35
==============================================================
script-41-server.js                                                           100%  572    24.8KB/s   00:00    
aaaa
bbbb
==============================================================
====             run express web server                   ====
====                script elapsed time 5:38
==============================================================
run express web server
nothing in here at present



==============================================================
==============================================================
====               install docker
====                script elapsed time 5:38
==============================================================
==============================================================






==============================================================
==============================================================
====                script 51                          ====
====                script elapsed time 5:38
==============================================================
==============================================================



====    note - maybe work through kubectl and minikube using interactive shell first * * * 
script-51-docker-compose.yaml                                                 100%   68     3.2KB/s   00:00    
script-51-kubectl.yaml                                                        100%  373    17.3KB/s   00:00    
docker script



list existing files
cd /home/azureuser
express
output.txt
script-18-always-run-zsh.sh
script-41-server.js
script-51-docker-compose.yaml
script-51-kubectl.yaml
vue25140
vue25150



echo first create docker folder
mkdir docker



move compose.yaml to docker folder



cd docker



Add Docker's official GPG key
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:6 https://deb.nodesource.com/node_20.x nodistro InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ca-certificates is already the newest version (20230311ubuntu0.22.04.1).
curl is already the newest version (7.81.0-1ubuntu1.16).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.



Add the repository to Apt sources
sudo apt-get update -y
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Get:5 https://download.docker.com/linux/ubuntu jammy InRelease [48.8 kB]
Hit:6 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:7 https://deb.nodesource.com/node_20.x nodistro InRelease
Get:8 https://download.docker.com/linux/ubuntu jammy/stable amd64 Packages [32.0 kB]
Fetched 80.9 kB in 1s (63.6 kB/s)
Reading package lists...



install docker
Reading package lists...
Building dependency tree...
Reading state information...
The following additional packages will be installed:
  containerd.io docker-buildx-plugin docker-ce-cli docker-ce-rootless-extras
  docker-compose-plugin libltdl7 libslirp0 pigz slirp4netns
Suggested packages:
  aufs-tools cgroupfs-mount | cgroup-lite
The following NEW packages will be installed:
  containerd.io docker-buildx-plugin docker-ce docker-ce-cli
  docker-ce-rootless-extras docker-compose-plugin libltdl7 libslirp0 pigz
  slirp4netns
0 upgraded, 10 newly installed, 0 to remove and 0 not upgraded.
Need to get 121 MB of archives.
After this operation, 434 MB of additional disk space will be used.
Get:1 http://azure.archive.ubuntu.com/ubuntu jammy/universe amd64 pigz amd64 2.6-1 [63.6 kB]
Get:2 http://azure.archive.ubuntu.com/ubuntu jammy/main amd64 libltdl7 amd64 2.4.6-15build2 [39.6 kB]
Get:3 http://azure.archive.ubuntu.com/ubuntu jammy/main amd64 libslirp0 amd64 4.6.1-1build1 [61.5 kB]
Get:4 http://azure.archive.ubuntu.com/ubuntu jammy/universe amd64 slirp4netns amd64 1.0.1-2 [28.2 kB]
Get:5 https://download.docker.com/linux/ubuntu jammy/stable amd64 containerd.io amd64 1.6.31-1 [29.8 MB]
Get:6 https://download.docker.com/linux/ubuntu jammy/stable amd64 docker-buildx-plugin amd64 0.14.0-1~ubuntu.22.04~jammy [29.7 MB]
Get:7 https://download.docker.com/linux/ubuntu jammy/stable amd64 docker-ce-cli amd64 5:26.1.2-1~ubuntu.22.04~jammy [14.6 MB]
Get:8 https://download.docker.com/linux/ubuntu jammy/stable amd64 docker-ce amd64 5:26.1.2-1~ubuntu.22.04~jammy [25.3 MB]
Get:9 https://download.docker.com/linux/ubuntu jammy/stable amd64 docker-ce-rootless-extras amd64 5:26.1.2-1~ubuntu.22.04~jammy [9319 kB]
Get:10 https://download.docker.com/linux/ubuntu jammy/stable amd64 docker-compose-plugin amd64 2.27.0-1~ubuntu.22.04~jammy [12.5 MB]
Fetched 121 MB in 2s (79.0 MB/s)
Selecting previously unselected package pigz.
(Reading database ... 70980 files and directories currently installed.)
Preparing to unpack .../0-pigz_2.6-1_amd64.deb ...
Unpacking pigz (2.6-1) ...
Selecting previously unselected package containerd.io.
Preparing to unpack .../1-containerd.io_1.6.31-1_amd64.deb ...
Unpacking containerd.io (1.6.31-1) ...
Selecting previously unselected package docker-buildx-plugin.
Preparing to unpack .../2-docker-buildx-plugin_0.14.0-1~ubuntu.22.04~jammy_amd64.deb ...
Unpacking docker-buildx-plugin (0.14.0-1~ubuntu.22.04~jammy) ...
Selecting previously unselected package docker-ce-cli.
Preparing to unpack .../3-docker-ce-cli_5%3a26.1.2-1~ubuntu.22.04~jammy_amd64.deb ...
Unpacking docker-ce-cli (5:26.1.2-1~ubuntu.22.04~jammy) ...
Selecting previously unselected package docker-ce.
Preparing to unpack .../4-docker-ce_5%3a26.1.2-1~ubuntu.22.04~jammy_amd64.deb ...
Unpacking docker-ce (5:26.1.2-1~ubuntu.22.04~jammy) ...
Selecting previously unselected package docker-ce-rootless-extras.
Preparing to unpack .../5-docker-ce-rootless-extras_5%3a26.1.2-1~ubuntu.22.04~jammy_amd64.deb ...
Unpacking docker-ce-rootless-extras (5:26.1.2-1~ubuntu.22.04~jammy) ...
Selecting previously unselected package docker-compose-plugin.
Preparing to unpack .../6-docker-compose-plugin_2.27.0-1~ubuntu.22.04~jammy_amd64.deb ...
Unpacking docker-compose-plugin (2.27.0-1~ubuntu.22.04~jammy) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../7-libltdl7_2.4.6-15build2_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-15build2) ...
Selecting previously unselected package libslirp0:amd64.
Preparing to unpack .../8-libslirp0_4.6.1-1build1_amd64.deb ...
Unpacking libslirp0:amd64 (4.6.1-1build1) ...
Selecting previously unselected package slirp4netns.
Preparing to unpack .../9-slirp4netns_1.0.1-2_amd64.deb ...
Unpacking slirp4netns (1.0.1-2) ...
Setting up docker-buildx-plugin (0.14.0-1~ubuntu.22.04~jammy) ...
Setting up containerd.io (1.6.31-1) ...
Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.
Setting up docker-compose-plugin (2.27.0-1~ubuntu.22.04~jammy) ...
Setting up libltdl7:amd64 (2.4.6-15build2) ...
Setting up docker-ce-cli (5:26.1.2-1~ubuntu.22.04~jammy) ...
Setting up libslirp0:amd64 (4.6.1-1build1) ...
Setting up pigz (2.6-1) ...
Setting up docker-ce-rootless-extras (5:26.1.2-1~ubuntu.22.04~jammy) ...
Setting up slirp4netns (1.0.1-2) ...
Setting up docker-ce (5:26.1.2-1~ubuntu.22.04~jammy) ...
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /lib/systemd/system/docker.service.
Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /lib/systemd/system/docker.socket.
Processing triggers for man-db (2.10.2-1) ...
Processing triggers for libc-bin (2.35-0ubuntu3.7) ...

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.



docker compose version
Docker Compose version v2.27.0



install docker compose
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 42.8M  100 42.8M    0     0  44.4M      0 --:--:-- --:--:-- --:--:--  246M



docker compose version
Docker Compose version v2.27.0



docker-compose -v
Docker Compose version v2.12.2



usermod docker



create .docker file



if it gives errors then try this


ls
total 12K
drwxrwxr-x 2 azureuser azureuser 4.0K May 15 20:59 .
drwxr-x--- 9 azureuser azureuser 4.0K May 15 21:00 ..
-rw-r--r-- 1 azureuser azureuser   68 May 15 20:59 script-51-docker-compose.yaml
sudo chmod g+rwx  $ HOME / .docker - R



sudo chmod 666 /var/run/docker.sock



finished block optional if errors arise



docker run hello world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
c1ec31eb5944: Pulling fs layer
c1ec31eb5944: Verifying Checksum
c1ec31eb5944: Download complete
c1ec31eb5944: Pull complete
Digest: sha256:a26bff933ddc26d5cdf7faa98b4ae1e3ec20c4985e6f87ac0973052224d24302
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/




docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
49b384cc7b4a: Pulling fs layer
49b384cc7b4a: Verifying Checksum
49b384cc7b4a: Download complete
49b384cc7b4a: Pull complete
Digest: sha256:3f85b7caad41a95462cf5b787d8a04604c8262cdcdf9a472b8c52ef83375fe15
Status: Downloaded newer image for ubuntu:latest
docker.io/library/ubuntu:latest



docker run ubuntu
root
/






printing out shell file which is about to be run inside docker container
echo hello from running docker file by phil anderson the mega scripter



running my script inside docker container



docker exec - run docker interactive shell - commented out for now as we dont want this



docker images
Error response from daemon: No such container: ubuntu
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES



docker running images
CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                              PORTS     NAMES
70f666525387   ubuntu        "pwd"      1 second ago    Exited (0) Less than a second ago             competent_mccarthy
2c45a562ff54   ubuntu        "whoami"   2 seconds ago   Exited (0) Less than a second ago             naughty_hugle
89f6689864f1   hello-world   "/hello"   7 seconds ago   Exited (0) 5 seconds ago                      reverent_bhaskara



docker pull alpine
Using default tag: latest
latest: Pulling from library/alpine
4abcf2066143: Pulling fs layer
4abcf2066143: Verifying Checksum
4abcf2066143: Download complete
4abcf2066143: Pull complete
Digest: sha256:c5b1261d6d3e43071626931fc004f70149baeba2c8ec672bd4f27761f8e1ad6b
Status: Downloaded newer image for alpine:latest
docker.io/library/alpine:latest
docker run alpine
root



docker pull debian
Using default tag: latest
latest: Pulling from library/debian
c6cf28de8a06: Pulling fs layer
c6cf28de8a06: Verifying Checksum
c6cf28de8a06: Download complete
c6cf28de8a06: Pull complete
Digest: sha256:fac2c0fd33e88dfd3bc88a872cfb78dcb167e74af6162d31724df69e482f886c
Status: Downloaded newer image for debian:latest
docker.io/library/debian:latest



docker run debian
root
/



sudo find / -name docker-compose
remove this search - as its super slow - as its searching entire computer for one string - not good
/usr/bin/docker-compose
/usr/libexec/docker/cli-plugins/docker-compose



docker compose version
docker: 'compose' is not a docker command.
See 'docker --help'



docker compose ps
docker: 'compose' is not a docker command.
See 'docker --help'



docker compose up
docker: 'compose' is not a docker command.
See 'docker --help'



docker compose up - d
unknown shorthand flag: 'd' in -d
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx
  compose*    Docker Compose
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default
                           "/home/azureuser/.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info",
                           "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/azureuser/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/azureuser/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/azureuser/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

For more help on how to use Docker, head to https://docs.docker.com/go/guides/








curl localhost
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload <!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>



docker images
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES



docker running images
CONTAINER ID   IMAGE         COMMAND    CREATED          STATUS                      PORTS     NAMES
c283877d5524   debian        "pwd"      17 seconds ago   Exited (0) 17 seconds ago             nifty_black
273aaf04b3ac   debian        "whoami"   19 seconds ago   Exited (0) 18 seconds ago             gallant_williams
f1437be8ae35   alpine        "whoami"   25 seconds ago   Exited (0) 25 seconds ago             naughty_yonath
70f666525387   ubuntu        "pwd"      28 seconds ago   Exited (0) 28 seconds ago             competent_mccarthy
2c45a562ff54   ubuntu        "whoami"   29 seconds ago   Exited (0) 28 seconds ago             naughty_hugle
89f6689864f1   hello-world   "/hello"   34 seconds ago   Exited (0) 33 seconds ago    Upload   Total   Spent    Left  Speed
100   612  100   612    0     0   164k      0 --:--:-- --:--:-- --:--:--  199k
          reverent_bhaskara



end docker script



kubectl script



  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   138  100   138    0     0    798      0 --:--:-- --:--:-- --:--:--   802
100 49.0M  100 49.0M    0     0  87.0M      0 --:--:-- --:--:-- --:--:-- 79.7M


download kubectl checksum
  252M
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   138  100   138    0     0    794      0 --:--:-- --:--:-- --:--:--   797
100    64  100    64    0     0 


validate kubectl checksum
   262      0 --:--:-- --:--:-- --:--:--   262
kubectl: OK



install kubectl



kubectl version
Client Version: v1.30.1
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3



kubectl detailed version
clientVersion:
  buildDate: "2024-05-14T10:50:53Z"
  compiler: gc
  gitCommit: 6911225c3f747e1cd9d109c305436d08b668f086
  gitTreeState: clean
  gitVersion: v1.30.1
  goVersion: go1.22.2
  major: "1"
  minor: "30"
  platform: linux/amd64
kustomizeVersion: v5.0.4-0.20230601165947-6ce0bf390ce3




return to root directory
mkdir kubectl



move kubectl.yaml to docker folder



cd kubectl



kubectl apply script-51-kubectl.yaml



kubectl get pods
error: error parsing script-51-kubectl.yaml: error converting YAML to JSON: yaml: line 19: found unexpected end of stream
E0515 21:00:56.202376   11486 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E0515 21:00:56.202764   11486 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E0515 21:00:56.204136   11486 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E0515 21:00:56.204393   11486 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused



maybe do this via interactive shell first



minikube



return to root directory
download minikube
E0515 21:00:56.205746   11486 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
The connection to the server localhost:8080 was refused - did you specify the right host or port?
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 91.1M  100 91.1M    0     0  33.0M      0  0:00:02  0:00:02 --:--:-- 32.6M


install minikube
:02  0:00:02 --:--:-- 33.0M



start minikube
* minikube v1.33.1 on Ubuntu 22.04
* Automatically selected the docker driver. Other choices: none, ssh

X Exiting due to RSRC_INSUFFICIENT_CORES:  has less than 2 CPUs available, but Kubernetes requires at least 2 to be available




minikube use
minikube can download the appropriate version of kubectl
and you should be able to use it like this minikube kubectl - - get po - A



set minikube alias
alias kubectl=minikube kubectl --



kubectl get po - A
error: no server found for cluster "minikube"
error: no server found for cluster "minikube"



some services eg storage-provisioner may not be running
this is normal during cluster bring-up
this will resolve itself
minkube dashboard shows status of clusters
* Profile "minikube" not found. Run "minikube profile list" to view all profiles.
  To start a cluster, run: "minikube start"
Create a sample deployment and expose it on port 8080:
error: cluster "minikube" does not exist
error: cluster "minikube" does not exist
It may take a moment, but your deployment will soon show up when you run:
error: no server found for cluster "minikube"
The easiest way to access this service is to let minikube launch a web browser for you:
* Profile "minikube" not found. Run "minikube profile list" to view all profiles.
  To start a cluster, run: "minikube start"
Alternatively, use kubectl to forward the port:
error: no server found for cluster "minikube"
Tada! Your application is now available at http://localhost:7080/.
You should be able to see the request metadata in the application output. Try changing the path of the request and observe the changes. Similarly, you can do a POST request and observe the body show up in the output.
Halt the cluster:
* Profile "minikube" not found. Run "minikube profile list" to view all profiles.
  To start a cluster, run: "minikube start"
zsh: no matches found: (requires a restart):
./scriptMasterWindows.sh: line 1119: docker: command not found
==============================================================
====             waypoint 0 docker took 111 s
====                script elapsed time 7:26
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
docker version client 26.1.2
docker version server 26.1.2
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 /home/azureuser
└── (empty)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95
waypoint index 23 name express 2 duration 6
waypoint index 24 name docker duration 111



==============================================================
==============================================================
====               install terraform              ====
====                script elapsed time 7:26
==============================================================
==============================================================






==============================================================
==============================================================
====                script 52                          ====
====                script elapsed time 7:26
==============================================================
==============================================================



script-52-terraform.tf                                                        100%  147     6.6KB/s   00:00    
script-52-terraform-main.tf                                                   100%  386    17.9KB/s   00:00    
==============================================================
====                    terraform help                    ====
==============================================================
terraform -help



terraform -help plan
==============================================================
====           terraform ... create folders               ====
==============================================================

cd /home/azureuser



ls
docker
express
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
script-52-terraform-main.tf
script-52-terraform.tf
vue25140
vue25150



mkdir terraform-052-021
zsh: command not found: terraform
zsh: command not found: terraform



mv script-52-terraform.tf terraform-052-021



ls
docker
express
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
script-52-terraform-main.tf
terraform-052-021
vue25140
vue25150



cd terraform-052-021



mv ./script-52-terraform.tf ./main.tf



ls
main.tf



terraform tutorials
https://medium.com/@sanghpriya785/running-your-first-terraform-hello-world-example-4bd8bb5c3efc
https://www.terraformbyexample.com/hello-world
https://developer.hashicorp.com/terraform/install
https://levelup.gitconnected.com/terraform-hello-world-b4985162cff2
install terraform on linux for azure https://developer.hashicorp.com/terraform/tutorials/azure-get-started/install-cli



==============================================================
====                terraform ... install                 ====
==============================================================
sudo apt-get update


sudo apt-get install gnupg



sudo apt-get install software-properties-common



download terraform binaries
--2024-05-15 21:01:35--  https://apt.releases.hashicorp.com/gpg
Resolving apt.releases.hashicorp.com (apt.releases.hashicorp.com)... 18.245.143.93, 18.245.143.63, 18.245.143.73, ...
Connecting to apt.releases.hashicorp.com (apt.releases.hashicorp.com)|18.245.143.93|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3980 (3.9K) [binary/octet-stream]
Saving to: ‘STDOUT’

     0K ...                                                   


report fingerprint
100% 2.47G=0s

2024-05-15 21:01:35 (2.47 GB/s) - written to stdout [3980/3980]

/usr/share/keyrings/hashicorp-archive-keyring.gpg
-------------------------------------------------
pub   rsa4096 2023-01-10 [SC] [expires: 2028-01-09]
      798A EC65 4E5C 1542 8C8E  42EE AA16 FCBC A621 E701
uid           [ unknown] HashiCorp Security (HashiCorp Package Signing) <security+packaging@hashicorp.com>
sub   rsa4096 2023-01-10 [S] [expires: 2028-01-09]




download terraform signing keys
gpg: directory '/home/azureuser/.gnupg' created
gpg: /home/azureuser/.gnupg/trustdb.gpg: trustdb created
deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com jammy main



sudo apt-get update



sudo apt-get install terraform



==============================================================
====              terraform ... hello world               ====
==============================================================
ls
main.tf



terraform init 052-098

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/null...
- Installing hashicorp/null v3.2.2...
- Installed hashicorp/null v3.2.2 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.



ls
main.tf



terraform apply input false auto approve

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # null_resource.default will be created
  + resource "null_resource" "default" {
      + id = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
null_resource.default: Creating...
null_resource.default: Provisioning with 'local-exec'...
null_resource.default (local-exec): Executing: ["/bin/sh" "-c" "echo 'Hello World' && pwd && whoami && ping -c 4 127.0.0.1"]
null_resource.default (local-exec): Hello World
null_resource.default (local-exec): /home/azureuser/terraform-052-021
null_resource.default (local-exec): azureuser
null_resource.default (local-exec): PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
null_resource.default (local-exec): 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.042 ms
null_resource.default (local-exec): 64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.046 ms
null_resource.default (local-exec): 64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.043 ms
null_resource.default (local-exec): 64 bytes from 127.0.0.1: icmp_seq=4 ttl=64 time=0.050 ms

null_resource.default (local-exec): --- 127.0.0.1 ping statistics ---
null_resource.default (local-exec): 4 packets transmitted, 4 received, 0% packet loss, time 3054ms
null_resource.default (local-exec): rtt min/avg/max/mdev = 0.042/0.045/0.050/0.003 ms
null_resource.default: Creation complete after 3s [id=4350536277142145610]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.






create a plan with terraform plan out tfplan
null_resource.default: Refreshing state... [id=4350536277142145610]

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.



ls
main.tf
terraform.tfstate
tfplan



terraform apply tfplan
null_resource.default: Refreshing state... [id=4350536277142145610]

No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.



terraform apply -input=false -auto-approve -lock=false tfplan

Apply complete! Resources: 0 added, 0 changed, 0 destroyed.



terraform plan -destroy -out=tfplan -input=false -lock=false
null_resource.default: Refreshing state... [id=4350536277142145610]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # null_resource.default will be destroyed
  - resource "null_resource" "default" {
      - id = "4350536277142145610" -> null
    }

Plan: 0 to add, 0 to change, 1 to destroy.

─────────────────────────────────────────────────────────────────────────────

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"



terraform apply -input=false -auto-approve -lock=false tfplan
null_resource.default: Destroying... [id=4350536277142145610]
null_resource.default: Destruction complete after 0s

Apply complete! Resources: 0 added, 0 changed, 1 destroyed.



ls
main.tf
terraform.tfstate
terraform.tfstate.backup
tfplan



screen - d - m to open a new window



screen - dm terraformScript.sh



screen - list
There is a screen on:
	13087..ubuntuVm01	(05/15/24 21:01:49)	(Detached)
1 Socket in /run/screen/S-azureuser.



cd /home/azureuser



ls
docker
express
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
script-52-terraform-main.tf
terraform-052-021
vue25140
vue25150



cd terraform-052-021



ls
main.tf
terraform.tfstate
terraform.tfstate.backup
terraformScript.sh
tfplan



enable tab completion for zsh - only need this for interactive sessions - auto tab complete



install terraform autocomplete - only need this for interactive sessions - auto tab complete




create script 1



chmod 777 script1.sh


echo ... echo hello >> script1.sh



cat ./script1.sh
echo hello world from script1.sh



ls
main.tf
script1.sh
terraform.tfstate
terraform.tfstate.backup
terraformScript.sh
tfplan



nohup script1.sh - does this run in a background process - not sure
hello world from script1.sh



the bash command opens a bash shell
bash



does zsh also work
zsh
==============================================================
====            terraform ... nginx on docker             ====
==============================================================



cd /home/azureuser



mkdir terraform-nginx-on-docker



mv script-52-terraform-main.tf terraform-nginx-on-docker



cd terraform-nginx-on-docker



mv script-52-terraform-main.tf main.tf



terraform init

Initializing the backend...

Initializing provider plugins...
- Finding kreuzwerker/docker versions matching "~> 3.0.1"...
- Installing kreuzwerker/docker v3.0.2...
- Installed kreuzwerker/docker v3.0.2 (self-signed, key ID BD080C4571C6104C)

Partner and community providers are signed by their developers.
If you'd like to know more about provider signing, you can read about it here:
https://www.terraform.io/docs/cli/plugins/signing.html

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.



terraform apply

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_container.nginx will be created
  + resource "docker_container" "nginx" {
      + attach                                      = false
      + bridge                                      = (known after apply)
      + command                                     = (known after apply)
      + container_logs                              = (known after apply)
      + container_read_refresh_timeout_milliseconds = 15000
      + entrypoint                                  = (known after apply)
      + env                                         = (known after apply)
      + exit_code                                   = (known after apply)
      + hostname                                    = (known after apply)
      + id                                          = (known after apply)
      + image                                       = (known after apply)
      + init                                        = (known after apply)
      + ipc_mode                                    = (known after apply)
      + log_driver                                  = (known after apply)
      + logs                                        = false
      + must_run                                    = true
      + name                                        = "tutorial"
      + network_data                                = (known after apply)
      + read_only                                   = false
      + remove_volumes                              = true
      + restart                                     = "no"
      + rm                                          = false
      + runtime                                     = (known after apply)
      + security_opts                               = (known after apply)
      + shm_size                                    = (known after apply)
      + start                                       = true
      + stdin_open                                  = false
      + stop_signal                                 = (known after apply)
      + stop_timeout                                = (known after apply)
      + tty                                         = false
      + wait                                        = false
      + wait_timeout                                = 60

      + ports {
          + external = 8000
          + internal = 80
          + ip       = "0.0.0.0"
          + protocol = "tcp"
        }
    }

  # docker_image.nginx will be created
  + resource "docker_image" "nginx" {
      + id           = (known after apply)
      + image_id     = (known after apply)
      + keep_locally = false
      + name         = "nginx"
      + repo_digest  = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.
docker_image.nginx: Creating...
docker_image.nginx: Still creating... [10s elapsed]
docker_image.nginx: Creation complete after 12s [id=sha256:e784f4560448b14a66f55c26e1b4dad2c2877cc73d001b7cd0b18e24a700a070nginx]
docker_container.nginx: Creating...
docker_container.nginx: Creation complete after 0s [id=0115f3be0383677cef301511af13a2ad627c62005b7cb984a7c5f0bfb22d78ed]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.



docker ps to see running container
CONTAINER ID   IMAGE          COMMAND                  CREATED        STATUS                  PORTS                  NAMES
0115f3be0383   e784f4560448   "/docker-entrypoint.…"   1 second ago   Up Less than a second   0.0.0.0:8000->80/tcp   tutorial



test nginx running on docker initiated by terraform
curl localhost:8000
  % Total    % Received % Xferd  Average Speed   Time   <!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>



 Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   615  100   615    0     0   110k      0 --:--:-- --:--:-- --:--:--  150k
==============================================================
====             waypoint 0 terraform took 37 s
====                script elapsed time 8:03
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
docker version client 26.1.2
docker version server 26.1.2
terraform version Terraform v1.8.3
on linux_amd64
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 /home/azureuser
└── (empty)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95
waypoint index 23 name express 2 duration 6
waypoint index 24 name docker duration 111
waypoint index 25 name terraform duration 37



==============================================================
==============================================================
====               install ansible                ====
====                script elapsed time 8:03
==============================================================
==============================================================






==============================================================
==============================================================
====                script 53                          ====
====                script elapsed time 8:03
==============================================================
==============================================================



script-53-ansible.yaml                                                        100%  308    12.6KB/s   00:00    
script-53-inventory.ini                                                       100%   39     2.0KB/s   00:00    
==============================================================
====                         ansible                      ====
==============================================================
ansible is agentless running via ssh to manage machines
ansible uses yaml yet another markup language to manage hosts
ansible produces consistent configuration, the same each time
ansible inventory file clarifies the hosts on which to run
ansible roles allow grouping of tasks, handlers and variables which promote reusability and modularity
ansible playbooks are written in yaml and set tasks to be performed
ansible has master and hosts
ansible keeps lists of relevant hosts in the /etc/ansible/hosts file
ansible hosts specified in the inventory.ini file under the hosts flag

ansible tutorials
https://www.ansible.com/how-ansible-works/
https://docs.ansible.com/ansible/latest/getting_started/introduction.html




cd /home/azureuser



mkdir ansible



mv script-53-ansible.yaml ansible



cd ansible



mv script-53-inventory.ini inventory.ini




sudo apt update



sudo apt-get install software-properties-common



sudo add-apt-repository --update ppa:ansible/ansible
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Get:5 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy InRelease [18.0 kB]
Hit:6 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:7 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:8 https://apt.releases.hashicorp.com jammy InRelease
Hit:9 https://deb.nodesource.com/node_20.x nodistro InRelease
Get:10 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy/main amd64 Packages [1120 B]
Get:11 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy/main Translation-en [752 B]
Fetched 19.9 kB in 3s (5744 B/s)
Reading package lists...
Repository: 'deb https://ppa.launchpadcontent.net/ansible/ansible/ubuntu/ jammy main'
Description:
Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications— automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.

http://ansible.com/

If you face any issues while installing Ansible PPA, file an issue here:
https://github.com/ansible-community/ppa/issues
More info: https://launchpad.net/~ansible/+archive/ubuntu/ansible
Adding repository.
Adding deb entry to /etc/apt/sources.list.d/ansible-ubuntu-ansible-jammy.list
Adding disabled deb-src entry to /etc/apt/sources.list.d/ansible-ubuntu-ansible-jammy.list
Adding key to /etc/apt/trusted.gpg.d/ansible-ubuntu-ansible.gpg with fingerprint 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367



sudo apt-get install ansible



ansible version
ansible [core 2.16.6]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/azureuser/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/azureuser/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] (/usr/bin/python3)
  jinja version = 3.0.3
  libyaml = True


sudo apt-get install python3



check python version
python3 --version
Python 3.10.12



sudo apt-get install python3-pip



is python pip installed
pip3 --version
pip 22.0.2 from /usr/lib/python3/dist-packages/pip (python 3.10)



which pip3
/usr/bin/pip3



pip3 --help

Usage:   
  pip3 <command> [options]

Commands:
  install                     Install packages.
  download                    Download packages.
  uninstall                   Uninstall packages.
  freeze                      Output installed packages in requirements format.
  list                        List installed packages.
  show                        Show information about installed packages.
  check                       Verify installed packages have compatible dependencies.
  config                      Manage local and global configuration.
  search                      Search PyPI for packages.
  cache                       Inspect and manage pip's wheel cache.
  index                       Inspect information available from package indexes.
  wheel                       Build wheels from your requirements.
  hash                        Compute hashes of package archives.
  completion                  A helper command used for command completion.
  debug                       Show information useful for debugging.
  help                        Show help for commands.

General Options:
  -h, --help                  Show help.
  --debug                     Let unhandled exceptions propagate outside the
                              main subroutine, instead of logging them to
                              stderr.
  --isolated                  Run pip in an isolated mode, ignoring
                              environment variables and user configuration.
  --require-virtualenv        Allow pip to only run in a virtual environment;
                              exit with an error otherwise.
  -v, --verbose               Give more output. Option is additive, and can be
                              used up to 3 times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output. Option is additive, and can be
                              used up to 3 times (corresponding to WARNING,
                              ERROR, and CRITICAL logging levels).
  --log <path>                Path to a verbose appending log.
  --no-input                  Disable prompting for input.
  --proxy <proxy>             Specify a proxy in the form
                              [user:passwd@]proxy.server:port.
  --retries <retries>         Maximum number of retries each connection should
                              attempt (default 5 times).
  --timeout <sec>             Set the socket timeout (default 15 seconds).
  --exists-action <action>    Default action when a path already exists:
                              (s)witch, (i)gnore, (w)ipe, (b)ackup, (a)bort.
  --trusted-host <hostname>   Mark this host or host:port pair as trusted,
                              even though it does not have valid or any HTTPS.
  --cert <path>               Path to PEM-encoded CA certificate bundle. If
                              provided, overrides the default. See 'SSL
                              Certificate Verification' in pip documentation
                              for more information.
  --client-cert <path>        Path to SSL client certificate, a single file
                              containing the private key and the certificate
                              in PEM format.
  --cache-dir <dir>           Store the cache data in <dir>.
  --no-cache-dir              Disable the cache.
  --disable-pip-version-check
                              Don't periodically check PyPI to determine
                              whether a new version of pip is available for
                              download. Implied with --no-index.
  --no-color                  Suppress colored output.
  --no-python-version-warning
                              Silence deprecation warnings for upcoming
                              unsupported Pythons.
  --use-feature <feature>     Enable new functionality, that may be backward
                              incompatible.
  --use-deprecated <feature>  Enable deprecated functionality, that will be
                              removed in the future.



alternative way to install ansible ... pip install ansible
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: ansible in /usr/lib/python3/dist-packages (9.5.1)



list packages installed via pip3
pip3 list
Package             Version
------------------- ----------------
ansible             9.5.1
ansible-core        2.16.6
attrs               21.2.0
Automat             20.2.0
Babel               2.8.0
bcrypt              3.2.0
blinker             1.4
certifi             2020.6.20
chardet             4.0.0
click               8.0.3
cloud-init          24.1.3
colorama            0.4.4
command-not-found   0.3
configobj           5.0.6
constantly          15.1.0
cryptography        3.4.8
dbus-python         1.2.18
distro              1.7.0
distro-info         1.1+ubuntu0.2
httplib2            0.20.2
hyperlink           21.0.0
idna                3.3
importlib-metadata  4.6.4
incremental         21.3.0
jeepney             0.7.1
Jinja2              3.0.3
jmespath            0.10.0
jsonpatch           1.32
jsonpointer         2.0
jsonschema          3.2.0
keyring             23.5.0
launchpadlib        1.10.16
lazr.restfulclient  0.14.4
lazr.uri            1.0.6
MarkupSafe          2.0.1
more-itertools      8.10.0
netifaces           0.11.0
ntlm-auth           1.4.0
oauthlib            3.2.0
packaging           21.3
paramiko            2.9.3
pexpect             4.8.0
pip                 22.0.2
ptyprocess          0.7.0
pyasn1              0.4.8
pyasn1-modules      0.2.1
PyGObject           3.42.1
PyHamcrest          2.0.2
PyJWT               2.3.0
pykerberos          1.1.14
PyNaCl              1.5.0
pyOpenSSL           21.0.0
pyparsing           2.4.7
pyparted            3.11.7
pyrsistent          0.18.1
pyserial            3.5
python-apt          2.4.0+ubuntu3
python-debian       0.1.43+ubuntu1.1
python-magic        0.4.24
pytz                2022.1
pywinrm             0.3.0
PyYAML              5.4.1
requests            2.25.1
requests-kerberos   0.12.0
requests-ntlm       1.1.0
resolvelib          0.8.1
SecretStorage       3.3.1
service-identity    18.1.0
setuptools          59.6.0
six                 1.16.0
sos                 4.5.6
ssh-import-id       5.11
systemd-python      234
Twisted             22.1.0
ubuntu-pro-client   8001
ufw                 0.36.1
unattended-upgrades 0.1
urllib3             1.26.5
wadllib             1.3.6
WALinuxAgent        2.2.46
wheel               0.37.1
xmltodict           0.12.0
zipp                1.0.0
zope.interface      5.4.0



show details about package
pip3 show ansible
Name: ansible
Version: 9.5.1
Summary: Radically simple IT automation
Home-page: https://ansible.com/
Author: Ansible, Inc.
Author-email: info@ansible.com
License: GPL-3.0-or-later
Location: /usr/lib/python3/dist-packages
Requires: 
Required-by: 



sleep 1



verify inventory
ansible-inventory -i inventory.ini --list
{
    "_meta": {
        "hostvars": {}
    },
    "all": {
        "children": [
            "ungrouped",
            "myhosts"
        ]
    },
    "myhosts": {
        "hosts": [
            "127.0.0.1",
            "8.8.8.8",
            "google.com"
        ]
    }
}



ping hosts in inventory
ansible myhosts -m ping -i inventory.ini
google.com | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
127.0.0.1 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}
8.8.8.8 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}



run ansible
ansible-playbook using inventory.ini and script.yaml

PLAY [phil anderson first ansible script running on list of hosts specified in the inventory] ***

TASK [Gathering Facts] *********************************************************
ok: [127.0.0.1]
ok: [google.com]
ok: [8.8.8.8]

TASK [Print message] ***********************************************************
ok: [127.0.0.1] => {
    "msg": "hello from phil ansible running ansible on a host"
}
ok: [8.8.8.8] => {
    "msg": "hello from phil ansible running ansible on a host"
}
ok: [google.com] => {
    "msg": "hello from phil ansible running ansible on a host"
}

TASK [Ping my hosts] ***********************************************************
ok: [8.8.8.8]
ok: [127.0.0.1]
ok: [google.com]

PLAY RECAP *********************************************************************
127.0.0.1                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
8.8.8.8                    : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
google.com                 : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   




further learning with ansible
lets look at the ansible hosts file
cat /etc/ansible/hosts
# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers:

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group:

## [webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

# If you have multiple hosts following a pattern, you can specify
# them like this:

## www[001:006].example.com

# You can also use ranges for multiple hosts: 

## db-[99:101]-node.example.com

# Ex 3: A collection of database servers in the 'dbservers' group:

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57


# Ex4: Multiple hosts arranged into groups such as 'Debian' and 'openSUSE':

## [Debian]
## alpha.example.org
## beta.example.org

## [openSUSE]
## green.example.com
## blue.example.com




now list ansible inventory
ansible-inventory -list
usage: ansible-inventory [-h] [--version] [-v] [-i INVENTORY] [-l SUBSET]
                         [--vault-id VAULT_IDS]
                         [-J | --vault-password-file VAULT_PASSWORD_FILES]
                         [--playbook-dir BASEDIR] [-e EXTRA_VARS] [--list]
                         [--host HOST] [--graph] [-y] [--toml] [--vars]
                         [--export] [--output OUTPUT_FILE]
                         [host|group]

Show Ansible inventory information, by default it uses the inventory script
JSON format

positional arguments:
  host|group

options:
  --export              When doing an --list, represent in a way that is
                        optimized for export,not as an accurate representation
                        of how Ansible has processed it
  --output OUTPUT_FILE  When doing --list, send the inventory to a file
                        instead of to the screen
  --playbook-dir BASEDIR
                        Since this tool does not use playbooks, use this as a
                        substitute playbook directory. This sets the relative
                        path for many features including roles/ group_vars/
                        etc.
  --toml                Use TOML format instead of default JSON, ignored for
                        --graph
  --vars                Add vars to graph display, ignored unless used with
                        --graph
  --vault-id VAULT_IDS  the vault identity to use. This argument may be
                        specified multiple times.
  --vault-password-file VAULT_PASSWORD_FILES, --vault-pass-file VAULT_PASSWORD_FILES
                        vault password file
  --version             show program's version number, config file location,
                        configured module search path, module location,
                        executable location and exit
  -J, --ask-vault-password, --ask-vault-pass
                        ask for vault password
  -e EXTRA_VARS, --extra-vars EXTRA_VARS
                        set additional variables as key=value or YAML/JSON, if
                        filename prepend with @. This argument may be
                        specified multiple times.
  -h, --help            show this help message and exit
  -i INVENTORY, --inventory INVENTORY, --inventory-file INVENTORY
                        specify inventory host path or comma separated host
                        list. --inventory-file is deprecated. This argument
                        may be specified multiple times.
  -l SUBSET, --limit SUBSET
                        further limit selected hosts to an additional pattern
  -v, --verbose         Causes Ansible to print more debug messages. Adding
                        multiple -v will increase the verbosity, the builtin
                        plugins currently evaluate up to -vvvvvv. A reasonable
                        level to start is -vvv, connection debugging might
                        require -vvvv. This argument may be specified multiple
                        times.
  -y, --yaml            Use YAML format instead of default JSON, ignored for
                        --graph

Actions:
  One of following must be used on invocation, ONLY ONE!

  --graph               create inventory graph, if supplying pattern it must
                        be a valid group name. It will ignore limit
  --host HOST           Output specific host info, works as inventory script.
                        It will ignore limit
  --list                Output all hosts info, works as inventory script
ERROR! No action selected, at least one of --host, --graph or --list needs to be specified.
==============================================================
====             waypoint 0 ansible took 726 s
====                script elapsed time 20:09
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
docker version client 26.1.2
docker version server 26.1.2
terraform version Terraform v1.8.3
on linux_amd64
ansible version ansible [core 2.16.6]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/azureuser/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/azureuser/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] (/usr/bin/python3)
  jinja version = 3.0.3
  libyaml = True
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 /home/azureuser
└── (empty)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95
waypoint index 23 name express 2 duration 6
waypoint index 24 name docker duration 111
waypoint index 25 name terraform duration 37
waypoint index 26 name ansible duration 726



==============================================================
==============================================================
====               github actions                 ====
====                script elapsed time 20:10
==============================================================
==============================================================



github actions ... build test and deploy code
github actions ... can add labels when issue is created, for example
github actions run on linux windows or macos machines called runners
github actions ... workflow is triggered ... on event ...
... workflow contains jobs ... in sequence or in parallel
... each job runs in own runner vm or container
... each job has a number of steps ...
... each step runs a script or an action which is a reusable extension
event
... triggers workflow ... defined in yaml ...
... workflows in .github/workflows folder
... event ... workflow ...
... vm runner 1 runs job 1 ... steps ... either actions or scripts ...
... jobs .. can have dependencies if desired ...

run all my code on a commit, not just when i want to run it?



github action links
https://docs.github.com/en/actions/quickstart


sample given
... installs bash testing framework
https://www.npmjs.com/package/bats



==============================================================
==============================================================
====             problem libraries                ====
====                script elapsed time 20:10
==============================================================
==============================================================



question not getting version of express js showing
question not getting version of vue js showing
question not getting version of react js showing
question not getting version of bun js showing
==============================================================
====             waypoint 0 install took 3 s
====                script elapsed time 20:12
==============================================================
==============================================================
aws cli installed of version aws-cli/2.15.21 
powershell version PowerShell 7.4.1 installed
environment cleaned
resource group ResourceGroup04 created
vm ubuntuVm01 ... image Ubuntu2204 .. os ubuntu type debian
vm ubuntuVm01 has ip 51.145.28.139
network security group queried
remote shell version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)
linux version VERSION="22.04.4 LTS (Jammy Jellyfish)"
linux os details  Static hostname: ubuntuVm01        Icon name: computer-vm          Chassis: vm       Machine ID: 33b50cf8fa3a49989fecfb2c639272dd          Boot ID: b2c88753b4074a7b9e678d3cd4e968da   Virtualization: microsoft Operating System: Ubuntu 22.04.4 LTS           Kernel: Linux 6.5.0-1021-azure     Architecture: x86-64  Hardware Vendor: Microsoft Corporation   Hardware Model: Virtual Machine
linux codename VERSION_CODENAME=jammy
linux id_like ID_LIKE=debian
python version Python 3.10.12
python platform version Linux-6.5.0-1021-azure-x86_64-with-glibc2.35
zsh version zsh 5.8.1 (x86_64-ubuntu-linux-gnu)
fish version fish, version 3.7.1
git version git version 2.34.1
node version v20.13.1
npm version 10.5.2
docker version client 26.1.2
docker version server 26.1.2
terraform version Terraform v1.8.3
on linux_amd64
ansible version ansible [core 2.16.6]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/azureuser/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/azureuser/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] (/usr/bin/python3)
  jinja version = 3.0.3
  libyaml = True
==============================
====      fix these       ====
==============================
apache version 
nginx version 
express version   /home/azureuser
└── (empty)
express version 2 /home/azureuser
└── (empty)
waypoint index 0 name script start duration 0
waypoint index 1 name installing aws and powershell duration 1
waypoint index 2 name log in to azure duration 0
waypoint index 3 name query azure duration 1
waypoint index 4 name clean environment duration 2
waypoint index 5 name create resource group duration 1
waypoint index 6 name list resource groups duration 1
waypoint index 7 name query vm templates duration 0
waypoint index 8 name set vm type to be ubuntu duration 0
waypoint index 9 name vm created duration 66
waypoint index 10 name query vm using azure cli duration 12
waypoint index 11 name query network security group performed duration 0
waypoint index 12 name query linux duration 80
waypoint index 13 name dnf install duration 3
waypoint index 14 name os updated duration 7
waypoint index 15 name deciding which services to install duration 0
waypoint index 16 name zsh duration 12
waypoint index 17 name install zsh oh-my-zsh duration 2
waypoint index 18 name fish duration 17
waypoint index 19 name git duration 2
waypoint index 20 name apache duration 2
waypoint index 21 name nginx duration 3
waypoint index 22 name node duration 95
waypoint index 23 name express 2 duration 6
waypoint index 24 name docker duration 111
waypoint index 25 name terraform duration 37
waypoint index 26 name ansible duration 726
waypoint index 27 name install duration 3



==============================================================
==============================================================
====         list vms and storages                ====
====                script elapsed time 20:12
==============================================================
==============================================================



list vms output to output-azure-vms.txt







==============================================================
==============================================================
====            set auto shutdown                 ====
====                script elapsed time 20:16
==============================================================
==============================================================



setting auto shutdown at 18:00
shut down object name
"shutdown-computevm-ubuntuVm01"
"Enabled"
==============================================================
====        create windows client vm - skipped            ====
====                script elapsed time 20:19
==============================================================



==============================================================
==============================================================
====       list kubernetes skipped                ====
====                script elapsed time 20:19
==============================================================
==============================================================






==============================================================
==============================================================
====           upload node teaching files                   ====
====                script elapsed time 20:20
==============================================================
==============================================================



script-90-learn-node.js                                                       100% 5141   165.6KB/s   00:00    
script-90-package.json                                                        100%  305    14.1KB/s   00:00    



==============================================================
==============================================================
====           install and run teaching node                ====
====                script elapsed time 20:22
==============================================================
==============================================================






==============================================================
==============================================================
====                    script 90                           ====
====                script elapsed time 20:22
==============================================================
==============================================================



zsh



cd /home/azureuser



ls -lah
total 180K
drwxr-x--- 17 azureuser azureuser 4.0K May 15 21:14 .
drwxr-xr-x  3 root      root      4.0K May 15 20:55 ..
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:10 .ansible
-rw-r--r--  1 azureuser azureuser  220 Jan  6  2022 .bash_logout
-rw-r--r--  1 azureuser azureuser 3.8K May 15 21:01 .bashrc
drwx------  2 azureuser azureuser 4.0K May 15 20:55 .cache
-rw-rwxr--  1 azureuser azureuser    0 May 15 21:00 .docker
drwx------  2 azureuser azureuser 4.0K May 15 21:01 .gnupg
drwxr-xr-x 10 azureuser azureuser 4.0K May 15 21:00 .minikube
drwxrwxr-x  4 azureuser azureuser 4.0K May 15 20:58 .npm
-rw-rw-r--  1 azureuser azureuser    0 May 15 20:57 .oh-my-zsh
-rw-r--r--  1 azureuser azureuser  807 Jan  6  2022 .profile
drwx------  2 azureuser azureuser 4.0K May 15 20:55 .ssh
-rw-r--r--  1 azureuser azureuser    0 May 15 20:55 .sudo_as_admin_successful
drwxr-xr-x  2 azureuser azureuser 4.0K May 15 21:01 .terraform.d
-rw-rw-r--  1 azureuser azureuser  181 May 15 21:01 .wget-hsts
-rw-rw-r--  1 azureuser azureuser  49K May 15 21:11 .zcompdump
-rw-rw-r--  1 azureuser azureuser 3.9K May 15 21:01 .zshrc
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:02 ansible
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:00 docker
drwxrwxr-x  4 azureuser azureuser 4.0K May 15 20:58 express
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:00 kubectl
-rwxrwxrwx  1 azureuser azureuser  20K May 15 21:01 output.txt
-rw-r--r--  1 azureuser azureuser   31 May 15 20:57 script-18-always-run-zsh.sh
-rw-r--r--  1 azureuser azureuser  572 May 15 20:59 script-41-server.js
-rwxrwxr-x  1 azureuser azureuser 5.1K May 15 21:14 script-90-learn-node.js
-rw-r--r--  1 azureuser azureuser  305 May 15 21:14 script-90-package.json
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:01 terraform-052-021
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:02 terraform-nginx-on-docker
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 20:58 vue25140
drwxrwxr-x  7 azureuser azureuser 4.0K May 15 20:59 vue25150
===================================================================
===================================================================
====             teach node script launcher                    ====
===================================================================
===================================================================



===================================================================
====             install node and npm                          ====
===================================================================
curl - f s S L https://deb.nodesource.com/setup_20.x   sudo - E zsh
2024-05-15 21:14:26 - Installing pre-requisites
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:6 https://apt.releases.hashicorp.com jammy InRelease
Hit:7 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy InRelease
Hit:8 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:9 https://deb.nodesource.com/node_20.x nodistro InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ca-certificates is already the newest version (20230311ubuntu0.22.04.1).
curl is already the newest version (7.81.0-1ubuntu1.16).
gnupg is already the newest version (2.2.27-3ubuntu2.1).
apt-transport-https is already the newest version (2.4.12).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
gpg: WARNING: unsafe ownership on homedir '/home/azureuser/.gnupg'
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:6 https://apt.releases.hashicorp.com jammy InRelease
Hit:7 https://deb.nodesource.com/node_20.x nodistro InRelease
Hit:8 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy InRelease
Hit:9 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Reading package lists...
2024-05-15 21:14:43 - Repository configured successfully. To install Node.js, run: apt-get install nodejs -y



curl - f s S L https://deb.nodesource.com/setup_20.x   sudo - E bash
2024-05-15 21:14:43 - Installing pre-requisites
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://apt.releases.hashicorp.com jammy InRelease
Hit:6 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:7 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy InRelease
Hit:8 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:9 https://deb.nodesource.com/node_20.x nodistro InRelease
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ca-certificates is already the newest version (20230311ubuntu0.22.04.1).
curl is already the newest version (7.81.0-1ubuntu1.16).
gnupg is already the newest version (2.2.27-3ubuntu2.1).
apt-transport-https is already the newest version (2.4.12).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
gpg: WARNING: unsafe ownership on homedir '/home/azureuser/.gnupg'
Hit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease
Hit:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease
Hit:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu jammy InRelease
Hit:6 https://apt.releases.hashicorp.com jammy InRelease
Hit:7 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu jammy InRelease
Hit:8 https://ppa.launchpadcontent.net/fish-shell/release-3/ubuntu jammy InRelease
Hit:9 https://deb.nodesource.com/node_20.x nodistro InRelease
Reading package lists...
2024-05-15 21:15:00 - Repository configured successfully. To install Node.js, run: apt-get install nodejs -y



E means preserve environment
sudo - E bash downloads, executes with sudo, using bash, preserving the existing environment variables



===================================================================
====                  install node
====      * * *   commands are totally silent        * * *     ====
===================================================================
totally silent apt get install node js
this is totally a duplicate and totally not required
find the first point i install node js and use this line there
and remove subsequent installs as they totally are not required after first install - do it once only






touch /home/azureuser/output.txt
chmod 777 /home/azureuser/output.txt
totally silent apt get install



totally silent apt get install dialog



totally silent apt get install apt-utils



totally silent apt get install node js
this is totally a duplicate and totally not required
find the first point i install node js and use this line there
and remove subsequent installs as they totally are not required after first install - do it once only



node version
v20.13.1
npm version
10.5.2



features learned in logical format - for ease of finding them



sudo mkdir js



ls
ansible
docker
express
js
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
script-90-learn-node.js
script-90-package.json
terraform-052-021
terraform-nginx-on-docker
vue25140
vue25150



mv script 90 teaching.js and package.json to js folder



ls
ansible
docker
express
js
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
terraform-052-021
terraform-nginx-on-docker
vue25140
vue25150



cd js



ls
script-90-learn-node.js
script-90-package.json



cp script-90-package.json package.json



sudo rm script-90-package.json



ls
package.json
script-90-learn-node.js



cat package json
{
  "name": "js",
  "version": "1.0.0",
  "description": "",
  "main": "script-90-teaching.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "type": "module",
  "author": "",
  "license": "ISC",
  "dependencies": {
    "ps-list": "^8.1.1",
    "ps-node": "^0.1.6"
  }
}



==============================================================
====                   npm install                        ====
==============================================================
npm install

added 4 packages, and audited 5 packages in 3s

1 package is looking for funding
  run `npm fund` for details

found 0 vulnerabilities
==============================================================
====                     run node                         ====
==============================================================
npm notice 
npm notice New minor version of npm available! 10.5.2 -> 10.7.0
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v10.7.0>
npm notice Run `npm install -g npm@10.7.0` to update!
npm notice 
sleep: missing operand
Try 'sleep --help' for more information.
sleep: missing operand
Try 'sleep --help' for more information.
==================================================
====           node hello world               ====
==================================================
hello world from the amazing world of js
==================================================
====          array for each                  ====
==================================================
1
2
3
==================================================
====              fetch get                   ====
==================================================
==================================================
====              fetch post                  ====
==================================================
==================================================
====               fetch put                  ====
==================================================
=======================================================
====                loops                          ====
====                every                          ====
====              for .. of                        ====
=======================================================
==================================================
====          loop - every                    ====
==================================================
1
2
3
==================================================
====         loop for ... of                  ====
==================================================
1
2
3
==================================================
====      loop for ... of ... entries         ====
==================================================
index 0 is item 0
index 1 is item 1
index 2 is item 2
==================================================
====               ps-list                    ====
====         list all process ...             ====
====      in this case break early ...        ====
==================================================
{
  pid: 1,
  name: 'systemd',
  cmd: '/lib/systemd/systemd --system --deserialize 28',
  ppid: 0,
  uid: 0,
  cpu: 0.6,
  memory: 0.3
}
{
  pid: 2,
  name: 'kthreadd',
  cmd: '[kthreadd]',
  ppid: 0,
  uid: 0,
  cpu: 0,
  memory: 0
}
==================================================
====             ps-node v1                   ====
==================================================
==================================================
====             ps-node v2                   ====
==================================================
{ userId: 1, id: 1, title: 'delectus aut autem', completed: false }
{ id: 1, title: 'foo', body: 'bar', userId: 1 }
{"pid":"4468","command":"/lib/systemd/systemd","arguments":["--user"],"ppid":"1"}
{ title: 'foo', body: 'bar', userId: 1, id: 101 }



==============================================================
==============================================================
====              bash scripting a to z                    ====
====                script elapsed time 21:12
==============================================================
==============================================================



./scriptMasterWindows.sh: line 1491: ./script-91-bash-commands.zsh: No such file or directory



==============================================================
==============================================================
====                     list files                        ====
====                script elapsed time 21:12
==============================================================
==============================================================






ls
ansible
docker
express
js
kubectl
output.txt
script-18-always-run-zsh.sh
script-41-server.js
terraform-052-021
terraform-nginx-on-docker
vue25140
vue25150



ls -lah
total 180K
drwxr-x--- 18 azureuser azureuser 4.0K May 15 21:15 .
drwxr-xr-x  3 root      root      4.0K May 15 20:55 ..
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:10 .ansible
-rw-r--r--  1 azureuser azureuser  220 Jan  6  2022 .bash_logout
-rw-r--r--  1 azureuser azureuser 3.8K May 15 21:01 .bashrc
drwx------  2 azureuser azureuser 4.0K May 15 20:55 .cache
-rw-rwxr--  1 azureuser azureuser    0 May 15 21:00 .docker
drwx------  2 azureuser azureuser 4.0K May 15 21:01 .gnupg
drwxr-xr-x 10 azureuser azureuser 4.0K May 15 21:00 .minikube
drwxrwxr-x  4 azureuser azureuser 4.0K May 15 20:58 .npm
-rw-rw-r--  1 azureuser azureuser    0 May 15 20:57 .oh-my-zsh
-rw-r--r--  1 azureuser azureuser  807 Jan  6  2022 .profile
drwx------  2 azureuser azureuser 4.0K May 15 20:55 .ssh
-rw-r--r--  1 azureuser azureuser    0 May 15 20:55 .sudo_as_admin_successful
drwxr-xr-x  2 azureuser azureuser 4.0K May 15 21:01 .terraform.d
-rw-rw-r--  1 azureuser azureuser  181 May 15 21:01 .wget-hsts
-rw-rw-r--  1 azureuser azureuser  49K May 15 21:11 .zcompdump
-rw-rw-r--  1 azureuser azureuser 3.9K May 15 21:01 .zshrc
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:02 ansible
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:00 docker
drwxrwxr-x  4 azureuser azureuser 4.0K May 15 20:58 express
drwxr-xr-x  3 root      root      4.0K May 15 21:15 js
drwxrwxr-x  2 azureuser azureuser 4.0K May 15 21:00 kubectl
-rwxrwxrwx  1 azureuser azureuser  21K May 15 21:15 output.txt
-rw-r--r--  1 azureuser azureuser   31 May 15 20:57 script-18-always-run-zsh.sh
-rw-r--r--  1 azureuser azureuser  572 May 15 20:59 script-41-server.js
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:01 terraform-052-021
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 21:02 terraform-nginx-on-docker
drwxrwxr-x  3 azureuser azureuser 4.0K May 15 20:58 vue25140
drwxrwxr-x  7 azureuser azureuser 4.0K May 15 20:59 vue25150






==============================================================
==============================================================
====                     get output                        ====
====                script elapsed time 21:13
==============================================================
==============================================================






==============================================================
==============================================================
====                  deallodcate vms                      ====
====                script elapsed time 21:14
==============================================================
==============================================================



(ResourceNotFound) The Resource 'Microsoft.Compute/virtualMachines/winServerVm01' under resource group 'ResourceGroup04' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix
Code: ResourceNotFound
Message: The Resource 'Microsoft.Compute/virtualMachines/winServerVm01' under resource group 'ResourceGroup04' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix



... waiting 2 minutes then deleting all servers and all resource groups so we start from scratch every time ...

